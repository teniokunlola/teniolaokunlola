version: '3.8'

services:
  # Nginx reverse proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: teniola-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/app/dist:ro
      - ./backend/staticfiles:/app/staticfiles:ro
      - ./backend/media:/app/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend-prod
    restart: unless-stopped
    networks:
      - teniola-network

  # Django backend
  backend-prod:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: teniola-backend
    environment:
      - DJANGO_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - ALLOWED_HOSTS=teniolaokunlola.com,www.teniolaokunlola.com,api.teniolaokunlola.com,admin.teniolaokunlola.com,localhost,127.0.0.1
      - SUPABASE_DB_HOST=${SUPABASE_DB_HOST}
      - SUPABASE_DB_NAME=${SUPABASE_DB_NAME}
      - SUPABASE_DB_USER=${SUPABASE_DB_USER}
      - SUPABASE_DB_PASSWORD=${SUPABASE_DB_PASSWORD}
      - SUPABASE_DB_PORT=${SUPABASE_DB_PORT}
      - CORS_ALLOWED_ORIGINS=https://teniolaokunlola.com,https://www.teniolaokunlola.com,https://admin.teniolaokunlola.com
      - CSRF_TRUSTED_ORIGINS=https://teniolaokunlola.com,https://www.teniolaokunlola.com,https://admin.teniolaokunlola.com
      - SECURE_SSL_REDIRECT=True
      - SECURE_HSTS_SECONDS=31536000
      - SECURE_HSTS_INCLUDE_SUBDOMAINS=True
      - SECURE_HSTS_PRELOAD=True
      - CSRF_COOKIE_SECURE=True
      - SESSION_COOKIE_SECURE=True
      - SECURE_BROWSER_XSS_FILTER=True
      - SECURE_CONTENT_TYPE_NOSNIFF=True
    volumes:
      - ./backend/media:/app/media
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/core/firebase_service_account.json:/app/core/firebase_service_account.json:ro
    expose:
      - "8000"
    restart: unless-stopped
    networks:
      - teniola-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database (optional - can use external Supabase)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: teniola-postgres
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - teniola-network

networks:
  teniola-network:
    driver: bridge

# volumes:
#   postgres_data:
